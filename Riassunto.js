//1. Итого про this

//Значение this устанавливается в зависимости от того, как вызвана функция:
// При вызове функции как метода:

//obj.func(...)    // this = obj
//obj["func"](...);
//При обычном вызове:

//    func(...) // this = window (ES3) /undefined (ES5)

//В new:

//new func() // this = {} (новый объект)
//Явное указание:
//func.call(context, arg1, arg2, ...)
//func.apply(context, args) // this = context (явная передача)

//2.Итого про call

//3.Итого про bind
//Метод bind возвращает «привязанный вариант» функции func,
//фиксируя контекст this и первые аргументы arg1, arg2…, если они заданы.
//
// Обычно bind применяется для фиксации this в методе объекта,
// чтобы передать его в качестве колбэка. Например, для setTimeout.
//
// Когда мы привязываем аргументы, такая функция называется «частично применённой» или «частичной».
//
// Частичное применение удобно, когда мы не хотим повторять один и тот же аргумент много раз.
// Например, если у нас есть функция send(from, to) и from всё время будет одинаков
// для нашей задачи, то мы можем создать частично применённую функцию и дальше работать с ней.


